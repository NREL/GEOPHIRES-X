[bumpversion]
current_version = 3.9.27
commit = True
tag = True

# Teaches bumpversion how to read and break down a version string that may or may not have a prerelease tag.
parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)(\-(?P<prerelease_label>[a-z]+)\.(?P<prerelease>\d+))?

# Teaches bumpversion how to build the new version string. It will try the first format, and if prerelease parts are
# missing, it will fall back to the second format.
serialize =
  {major}.{minor}.{patch}-{prerelease_label}.{prerelease}
  {major}.{minor}.{patch}

# Configures the new 'prerelease' number part
[bumpversion:part:prerelease]
first_value = 0

[bumpversion:part:prerelease_label]
optional_value = rc
values =
  alpha
  beta
  rc

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = version='{new_version}'

[bumpversion:file (badge):README.rst]
search = /v{current_version}.svg
replace = /v{new_version}.svg

[bumpversion:file (link):README.rst]
search = /v{current_version}...main
replace = /v{new_version}...main

[bumpversion:file:docs/conf.py]
search = version = release = '{current_version}'
replace = version = release = '{new_version}'

[bumpversion:file:src/geophires_x/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'

[bumpversion:file:.cookiecutterrc]
search = version: {current_version}
replace = version: {new_version}
